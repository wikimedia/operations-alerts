# deploy-tag: global
#
# The rules below will be evaluated globally (via Thanos rule). The max() function is used to get
# rid of double-counting since "log_" type metrics are calculated in each site in isolation.

groups:
 - name: nel
   rules:
   - alert: NELHigh
     annotations:
       description: 'Too high an incoming rate of browser-reported Network Error Logging events of type {{ $labels.type }}: {{ $value }}/s'
       summary: 'Elevated Network Error Logging events ({{ $labels.type }}) #page'
       dashboard: 'https://logstash.wikimedia.org/goto/5c8f4ca1413eda33128e5c5a35da7e28'
       runbook: 'https://wikitech.wikimedia.org/wiki/Network_monitoring#NEL_alerts'
     # We restrict to two types we believe to best correlate with actionable issues that aren't caught
     # by other monitoring.
     # This computes a per-second rate.
     expr: max by (type) (log_w3c_networkerror_type_doc_count{type=~"tcp.(address_unreachable|timed_out)"}) / 60 > 1
     for: 5m
     labels:
       severity: page
       team: sre

   - alert: NELNotReported
     annotations:
       description: 'The metric log_w3c_networkerror_type_doc_count has disappeared, NEL alerting will not work'
       summary: 'NEL metrics not reported'
       dashboard: 'https://logstash.wikimedia.org/goto/5c8f4ca1413eda33128e5c5a35da7e28'
       runbook: 'https://wikitech.wikimedia.org/wiki/Network_monitoring#NEL_alerts'
     expr: absent(log_w3c_networkerror_type_doc_count)
     for: 1m
     labels:
       severity: critical
       team: sre
