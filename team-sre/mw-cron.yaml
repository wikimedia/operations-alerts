# deploy-tag: k8s
groups:
  - name: mw-cron
    rules:
      - &MediaWikiCronJobFailed
        alert: MediaWikiCronJobFailed
        annotations:
          description: 'Use `kube-env mw-cron {{ $externalLabels.site }}; kubectl get jobs -l team={{ $labels.label_team }},cronjob={{ $labels.label_cronjob }} --field-selector status.successful=0` to see failures'
          summary: 'MediaWiki periodic job {{ $labels.label_cronjob }} failed'
          runbook: 'https://wikitech.wikimedia.org/wiki/Periodic_jobs#Troubleshooting'
          dashboard: 'https://w.wiki/DocP'
        expr: sum by (label_cronjob, label_team) (
          kube_job_status_failed{namespace='mw-cron', job_name != "wikidata-updatequeryservicelag"} * on (namespace, job_name)
          group_left(label_cronjob,label_team) kube_job_labels{namespace="mw-cron", label_cronjob != "wikidata-updatequeryservicelag"}
          ) > 0
        for: 5m
        labels:
          severity: task
          team: '{{ $labels.label_team }}'
      - <<: *MediaWikiCronJobFailed
        labels:
          severity: warning
          team: serviceops
      - <<: *MediaWikiCronJobFailed
        # Flaky job, alert when 5 runs failed in the last 10 minutes.
        expr: sum by (label_cronjob, label_team) (
          kube_job_status_failed{namespace='mw-cron', job_name="wikidata-updatequeryservicelag"} * on (namespace, job_name)
          group_left(label_cronjob,label_team) kube_job_labels{namespace="mw-cron", label_cronjob="wikidata-updatequeryservicelag"}
          ) > 5
      - <<: *MediaWikiCronJobFailed
        # Flaky job, alert when 5 runs failed in the last 10 minutes.
        expr: sum by (label_cronjob, label_team) (
          kube_job_status_failed{namespace='mw-cron', job_name="wikidata-updatequeryservicelag"} * on (namespace, job_name)
          group_left(label_cronjob,label_team) kube_job_labels{namespace="mw-cron", label_cronjob="wikidata-updatequeryservicelag"}
          ) > 5
        labels:
          severity: warning
          team: serviceops
