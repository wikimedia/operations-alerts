# We do not want to alert on this in staging at the moment
# deploy-tag: k8s
groups:
  - name: eventgate
    rules:

## Eventgate Logging Latency alerts
### Critical for 90th percentile
    - &EventgateLatencyCritical
      alert: EventgateLatency
      annotations:
        description: Critical latency for 90th percentile of {{ $labels.method }} method events on {{ $labels.service }} in {{ $externalLabels.site }}.
        summary: Critical latency for {{ $labels.method }} events on {{ $labels.service }} in {{ $externalLabels.site }}.
        dashboard: https://grafana.wikimedia.org/d/ZB39Izmnz/eventgate?viewPanel=79&orgId=1&var-service={{ $labels.service }}
        runbook: https://wikitech.wikimedia.org/wiki/Event_Platform/EventGate
      # pint disable promql/series
      expr: service_method:express_router_request_duration_seconds:90pct5m{service="eventgate-main"} > 1
      for: 5m
      labels:
        severity: critical
        team: data-engineering

    - <<: *EventgateLatencyCritical
      # pint disable promql/series
      expr: service_method:express_router_request_duration_seconds:90pct5m{service="eventgate-analytics"} > 1

    - <<: *EventgateLatencyCritical
      # pint disable promql/series
      expr: service_method:express_router_request_duration_seconds:90pct5m{service="eventgate-analytics-external"} > 1

    - <<: *EventgateLatencyCritical
      # pint disable promql/series
      expr: service_method:express_router_request_duration_seconds:90pct5m{service="eventgate-logging-external"} > 1

###  Elevated (warn) for 90th percentile
    - &EventgateLatencyElevated
      alert: EventgateLatency
      annotations:
        description: Elevated latency for 90th percentile of {{ $labels.method }} method events on {{ $labels.service }} in {{ $externalLabels.site }}.
        summary: Elevated latency for {{ $labels.method }} events on {{ $labels.service }} in {{ $externalLabels.site }}.
        dashboard: https://grafana.wikimedia.org/d/ZB39Izmnz/eventgate?viewPanel=79&orgId=1&var-service={{ $labels.service }}
        runbook: https://wikitech.wikimedia.org/wiki/Event_Platform/EventGate
      # pint disable promql/series
      expr: service_method:express_router_request_duration_seconds:90pct5m{service="eventgate-main"} > 0.98
      for: 5m
      labels:
        severity: warning
        team: data-engineering

    - <<: *EventgateLatencyElevated
      # pint disable promql/series
      expr: service_method:express_router_request_duration_seconds:90pct5m{service="eventgate-analytics"} > 0.98

    - <<: *EventgateLatencyElevated
      # pint disable promql/series
      expr: service_method:express_router_request_duration_seconds:90pct5m{service="eventgate-analytics-external"} > 0.98

    - <<: *EventgateLatencyElevated
      # pint disable promql/series
      expr: service_method:express_router_request_duration_seconds:90pct5m{service="eventgate-logging-external"} > 0.98

## Eventgate Services Validation Error Alerts

## Metrics for validation_errors are created dynamically as errors happen in a stream.
## Therefore disable pint check for missing series.

    - &EventgateValidationErrors
      alert: EventgateValidationErrors
      annotations:
        description: "{{ $labels.service }} stream {{ $labels.stream }} validation errors detected in past 15 min"
        summary: "{{ $labels.service }} stream {{ $labels.stream }} validation errors detected in past 15 min"
        dashboard: "https://grafana.wikimedia.org/d/ZB39Izmnz/eventgate?orgId=1&refresh=1m&var-service={{ $labels.service }}&var-stream=All&var-kafka_broker=All&var-kafka_producer_type=All&var-dc=thanos"
        runbook: https://wikitech.wikimedia.org/wiki/Event_Platform/EventGate
      # pint disable promql/series
      expr: sum by (stream, service) (rate(eventgate_validation_errors_total{service="eventgate-main"} [15m])) > 0.5
      labels:
        severity: critical
        team: data-engineering

    - <<: *EventgateValidationErrors
      # pint disable promql/series
      expr: sum by (stream, service) (rate(eventgate_validation_errors_total{service="eventgate-analytics"} [15m])) > 1

    - <<: *EventgateValidationErrors
      # pint disable promql/series
      expr: sum by (stream, service) (rate(eventgate_validation_errors_total{service="eventgate-analytics-external"} [15m])) > 2

    - <<: *EventgateValidationErrors
      # pint disable promql/series
      expr: sum by (stream, service) (rate(eventgate_validation_errors_total{service="eventgate-logging-external"} [15m])) > 0.5

## Eventgate HTTP errors
    - &EventgateHTTPErrors
      alert: EventgateHTTPErrors
      annotations:
        description: Elevated errors on {{ $labels.service }} in {{ $externalLabels.site }}.
        summary: Elevated errors on {{ $labels.service }} in {{ $externalLabels.site }}.
        dashboard: https://grafana.wikimedia.org/d/ZB39Izmnz/eventgate?orgId=1&refresh=1m&var-dc={{ $externalLabels.site }}%2Bprometheus/k8s&var-service={{ $labels.service }}
        runbook: https://wikitech.wikimedia.org/wiki/Event_Platform/EventGate
      # There might not be 5xx all the time, thus ignore matching 'status'
      # label. https://cloudflare.github.io/pint/checks/promql/series.html#ignorelabel-value
      # pint rule/set promql/series(express_router_request_duration_seconds_count) ignore/label-value status
      expr: rate(express_router_request_duration_seconds_count{service="eventgate-main",status=~"5.."}[5m]) > 1
      for: 5m
      labels:
        severity: critical
        team: data-engineering

    - <<: *EventgateHTTPErrors
      # pint disable promql/series
      expr: rate(express_router_request_duration_seconds_count{service="eventgate-analytics",status=~"5.."}[5m]) > 1

    - <<: *EventgateHTTPErrors
      # pint disable promql/series
      expr: rate(express_router_request_duration_seconds_count{service="eventgate-analytics-external",status=~"5.."}[5m]) > 1

    - <<: *EventgateHTTPErrors
      # pint disable promql/series
      expr: rate(express_router_request_duration_seconds_count{service="eventgate-logging-external",status=~"5.."}[5m]) > 1

## Eventgate Produce Rate Anomaly
    - &EventgateProduceRateAnomaly
      alert: EventgateProduceRateAnomaly
      annotations:
        description: Significant produce rate deviation (+-25%) detected on {{ $labels.service }} in {{ $externalLabels.site }}.
        summary: Significant produce rate deviation (+-25%) on {{ $labels.service }} in {{ $externalLabels.site }}.
        dashboard: https://grafana.wikimedia.org/d/ZB39Izmnz/eventgate?orgId=1&refresh=1m&var-dc={{ $externalLabels.site }}%2Bprometheus/k8s&var-service={{ $labels.service }}
        runbook: https://wikitech.wikimedia.org/wiki/Event_Platform/EventGate
      # Calculate the 1h average rate as baseline, then compare current 5m rate to it
      # Alert if current rate deviates by more than 25% from the 1h average
      # Absolute value of (current rate - 1h average) / 1h average > 0.25
      expr: |
        (
          (
            abs(
              (sum(rate(eventgate_events_produced_total{service="eventgate-main"}[5m])) by (service)
              - avg_over_time(sum(rate(eventgate_events_produced_total{service="eventgate-main"}[5m])) by (service)[1h:5m])
              )
              /
              avg_over_time(sum(rate(eventgate_events_produced_total{service="eventgate-main"}[5m])) by (service)[1h:5m])
            )
            > 0.25
          )
          and
          # Only alert if we have enough historical data (at least 1h)
          avg_over_time(sum(rate(eventgate_events_produced_total{service="eventgate-main"}[5m])) by (service)[1h:5m]) > 5
        )
      for: 5m
      labels:
        severity: warning
        team: data-engineering
    - <<: *EventgateProduceRateAnomaly
      # eventgate-analytics
      expr: |
        (
          (
            abs(
              (sum(rate(eventgate_events_produced_total{service="eventgate-analytics"}[5m])) by (service)
              - avg_over_time(sum(rate(eventgate_events_produced_total{service="eventgate-analytics"}[5m])) by (service)[1h:5m])
              )
              /
              avg_over_time(sum(rate(eventgate_events_produced_total{service="eventgate-analytics"}[5m])) by (service)[1h:5m])
            )
            > 0.25
          )
          and
          # Only alert if we have enough historical data (at least 1h)
          avg_over_time(sum(rate(eventgate_events_produced_total{service="eventgate-analytics"}[5m])) by (service)[1h:5m]) > 5
        )
    - <<: *EventgateProduceRateAnomaly
      # eventgate-analytics-external
      expr: |
        (
          (
            abs(
              (sum(rate(eventgate_events_produced_total{service="eventgate-analytics-external"}[5m])) by (service)
              - avg_over_time(sum(rate(eventgate_events_produced_total{service="eventgate-analytics-external"}[5m])) by (service)[1h:5m])
              )
              /
              avg_over_time(sum(rate(eventgate_events_produced_total{service="eventgate-analytics-external"}[5m])) by (service)[1h:5m])
            )
            > 0.25
          )
          and
          # Only alert if we have enough historical data (at least 1h)
          avg_over_time(sum(rate(eventgate_events_produced_total{service="eventgate-analytics-external"}[5m])) by (service)[1h:5m]) > 5
        )
    - <<: *EventgateProduceRateAnomaly
      # eventgate-logging-external
      expr: |
        (
          (
            abs(
              (sum(rate(eventgate_events_produced_total{service="eventgate-logging-external"}[5m])) by (service)
              - avg_over_time(sum(rate(eventgate_events_produced_total{service="eventgate-logging-external"}[5m])) by (service)[1h:5m])
              )
              /
              avg_over_time(sum(rate(eventgate_events_produced_total{service="eventgate-logging-external"}[5m])) by (service)[1h:5m])
            )
            > 0.25
          )
          and
          # Only alert if we have enough historical data (at least 1h)
          avg_over_time(sum(rate(eventgate_events_produced_total{service="eventgate-logging-external"}[5m])) by (service)[1h:5m]) > 5
        )
## Eventgate produce rate stops
    - &EventgateProduceRateStop
      alert: EventgateProduceRateStop
      annotations:
        description: No produce rate detected on {{ $labels.service }} in {{ $externalLabels.site }}.
        summary: No produce rate detected on {{ $labels.service }} in {{ $externalLabels.site }}.
        dashboard: https://grafana.wikimedia.org/d/ZB39Izmnz/eventgate?orgId=1&refresh=1m&var-dc={{ $externalLabels.site }}%2Bprometheus/k8s&var-service={{ $labels.service }}
        runbook: https://wikitech.wikimedia.org/wiki/Event_Platform/EventGate
      expr: sum(rate(eventgate_events_produced_total{service="eventgate-main"}[5m])) by (service) == 0
      for: 5m
      labels:
        severity: critical
        team: data-engineering
    - <<: *EventgateProduceRateStop
      # eventgate-analytics
      expr: sum(rate(eventgate_events_produced_total{service="eventgate-analytics"}[5m])) by (service) == 0
    - <<: *EventgateProduceRateStop
      # eventgate-analytics-external
      expr: sum(rate(eventgate_events_produced_total{service="eventgate-analytics-external"}[5m])) by (service) == 0
    - <<: *EventgateProduceRateStop
      # eventgate-logging-external
      expr: sum(rate(eventgate_events_produced_total{service="eventgate-eventlogging-external"}[5m])) by (service) == 0
