groups:
  - name: traffic_varnish
    rules:
      - alert: VarnishPrometheusExporterDown
        expr: up{instance=~"cp[0-9]{4}:9331"} == 0
        for: 5m
        labels:
          team: traffic
          severity: warning
        annotations:
          summary: "Varnish Exporter on instance {{ $labels.instance }} is unreachable"
          description: "Prometheus has been unable to fetch metrics from Varnish Exporter on host {{ $labels.instance }} job({{ $labels.job }}) for more than 5 minutes. Make sure the exporter is running on the host."

      - alert: VarnishChildRestarted
        expr: varnish_mgt_child_start{layer="frontend"} >= 2
        labels:
          team: traffic
          severity: critical
        annotations:
          summary: '{{ $labels.job }} restarted on {{ $labels.instance | reReplaceAll "^([^:]+).*" "${1}" }}'
          description: 'Varnish seems to be unstable on {{ $labels.instance | reReplaceAll "^([^:]+).*" "${1}" }}, specifically {{ $labels.job }}.'
          dashboard: 'https://grafana.wikimedia.org/d/000000330/varnish-machine-stats?orgId=1&viewPanel=66&var-server={{ $labels.instance | reReplaceAll "^([^:]+).*" "${1}" }}&datasource={{ $externalLabels.site }}%20prometheus/ops'
          runbook: &wt-varnish "https://wikitech.wikimedia.org/wiki/Varnish"

      - alert: VarnishHighMmapCount
        expr: "round((varnishd_mmap_count / sysctl_vm_max_map_count) * 100) > 70"
        for: 5m
        labels:
          team: traffic
          severity: warning
        annotations: &VarnishHighMmapCountAnn
          summary: "Varnish's number of memory map areas are reaching the maximum limit"
          description: 'Varnish on {{ $labels.instance }} ({{ $externalLabels.site }}) is at {{ $value }}% of the vm.max_map_count limit.'
          dashboard: 'https://grafana.wikimedia.org/d/wiU3SdEWk/cache-host-drilldown?viewPanel=76&var-site={{ $externalLabels.site }}&var-instance={{ $labels.instance | reReplaceAll "^([^:]+).*" "${1}" }}'
          runbook: *wt-varnish

      - alert: VarnishHighMmapCount
        expr: "round((varnishd_mmap_count / sysctl_vm_max_map_count) * 100) > 90"
        labels:
          team: traffic
          severity: critical
        annotations: *VarnishHighMmapCountAnn

      - alert: VarnishTrafficDrop
        # The 'and sum(...)' below enforces a minimum 15000rps that we must
        # have dropped below before we are allowed to alert. A simple ratio is
        # very sensitive to slight traffic variations when you have low
        # absolute traffic.
        # Only check varnish-text since varnish-upload traffic is more
        # unpredictable.
        expr: |
          (
            sum (job_method_status:varnish_requests:rate5m{job="varnish-text", method="GET", status="200"}) * 100 /
            sum (job_method_status:varnish_requests:rate5m{job="varnish-text", method="GET", status="200"} offset 30m) and
            sum (job_method_status:varnish_requests:rate5m{job="varnish-text", method="GET", status="200"} offset 30m) > 15000

          ) <= 70
        labels:
          team: traffic
          severity: warning
        annotations: &VarnishTrafficDropAnn
          summary: 'Varnish traffic in {{ $externalLabels.site }} has dropped {{ $value }}%'
          description: 'Traffic has dropped {{ $value }}% in the past 30 minutes.'
          dashboard: 'https://grafana.wikimedia.org/d/000000180/varnish-http-requests?viewPanel=6'
          runbook: *wt-varnish

      - alert: VarnishTrafficDrop
        expr: |
          (
            sum (job_method_status:varnish_requests:rate5m{job="varnish-text", method="GET", status="200"}) * 100 /
            sum (job_method_status:varnish_requests:rate5m{job="varnish-text", method="GET", status="200"} offset 30m) and
            sum (job_method_status:varnish_requests:rate5m{job="varnish-text", method="GET", status="200"} offset 30m) > 15000
          ) <= 60
        labels:
          team: traffic
          severity: critical
        annotations: *VarnishTrafficDropAnn
